
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
          &kp Q   &kp W               &kp F           &kp P   &kp B               &kp J              &kp L            &kp U    &kp Y  &mt LGUI(BACKSPACE) BACKSPACE
          &kp A   &kp R      &mt LEFT_ALT S  &mt LEFT_GUI T   &kp G               &kp M    &mt RIGHT_GUI N  &mt RIGHT_ALT E    &kp I                    &kp O
          &kp X   &kp C               &kp D           &kp V   &kp Z               &kp K              &kp H        &kp COMMA  &kp DOT                   &to 2
                         &mt LEFT_ALT(LEFT_CONTROL(LEFT_SHIFT)) SPACE  &sk LEFT_SHIFT                              &sk RIGHT_CONTROL            &sl 1
            >;
        };

        layer_One_Shot {
            bindings = <
           &kp ESC   &kp AT          &kp HASH          &kp PRINTSCREEN    &kp PERCENT           &kp CARET         &kp AMPERSAND         &kp KP_MULTIPLY        &kp SEMICOLON     &kp COLON
           &kp TAB   &kp EQUAL       &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &trans                &kp               &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp               &kp ENTER
           &kp TILDE &kp DOLLAR      &kp UNDERSCORE    &trans             &to 4                &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET &to 3
                                                       &to 0             &sk LEFT_SHIFT        &sk RIGHT_ALT     &to 2
            >;
        };

        layer_NUM_CTRL {
            bindings = <
         &kp ESC  &kp C_PLAY_PAUSE &kp C_PREV     &kp C_NEXT     &kp UNDERSCORE          &mt LGUI(MINUS) MINUS   &mt LGUI(N7) N7  &mt LGUI(N8) N8  &mt LGUI(N9) N9     &trans
         &kp TAB  &trans           &kp C_VOL_DN   &kp C_VOL_UP   &kp PLUS                &mt LGUI(EQUAL) EQUAL   &mt LGUI(N4) N4  &mt LGUI(N5) N5  &mt LGUI(N6) N6     &kp ENTER
         &to 4   &kp KP_MULTIPLY  &kp C_BRI_DEC  &kp C_BRI_INC  &kp KP_DOT              &mt LGUI(N0) N0         &mt LGUI(N1) N1  &mt LGUI(N2) N2  &mt LGUI(N3) N3     &trans
                                                  &to 0         &sk LEFT_GUI            &kp RIGHT_ALT           &trans
            >;
        };

        layer_Navigate {
            bindings = <
         &trans           &mwh SCROLL_LEFT &mmv MOVE_UP   &mwh SCROLL_RIGHT &mt Q H              &kp LA(LEFT_ARROW)  &kp RC(LS(TAB))  &kp LC(TAB) &kp LA(RIGHT_ARROW)   &trans
         &mt TAB LA(TAB)  &mmv MOVE_LEFT   &mmv MOVE_DOWN &mmv MOVE_RIGHT   &kp LGUI              &mt RGUI(LEFT_ARROW) LEFT_ARROW      &mt RGUI(DOWN_ARROW) DOWN_ARROW  &mt RGUI(UP_ARROW) UP_ARROW  &mt RGUI(RIGHT_ARROW) RIGHT_ARROW  &kp ENTER
         &trans           &mkp RCLK        &mwh SCROLL_UP &mwh SCROLL_DOWN  &kp DEL             &mkp LCLK     &trans  &trans  &trans  &trans
                                                          &to 0             &trans              &kp RA  &to 1
            >;
        };

        layer_Keyboard_Function {
            bindings = <
         &trans  &trans  &trans  &trans  &trans              &trans  &kp F9  &kp F10  &kp F11  &kp F12
         &trans  &trans  &trans  &trans  &trans              &trans  &kp F5  &kp F6   &kp F7   &kp F8
         &trans  &trans  &trans  &trans  &trans              &trans  &kp F1  &kp F2   &kp F3   &kp F4
                         &trans  &trans                              &trans  &trans
            >;
        };

    };
};



